From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mrredstone5230 <sebastienduf@icloud.com>
Date: Fri, 9 Jul 2021 22:11:11 +0100
Subject: Faster cauldrons

diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 6ecf60c69..cc25ea8c1 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -729,7 +729,7 @@ public class ServerLevel extends net.minecraft.world.level.Level implements Worl
         }
 
         gameprofilerfiller.popPush("iceandsnow");
-        if (!this.paperConfig.disableIceAndSnow && this.random.nextInt(16) == 0) { // Paper - Disable ice and snow
+        if (!this.paperConfig.disableIceAndSnow) { // Paper - Disable ice and snow
             blockposition = this.getHeightmapPos(Heightmap.Types.MOTION_BLOCKING, this.getBlockRandomPos(j, 0, k, 15));
             BlockPos blockposition1 = blockposition.below();
             Biome biomebase = this.getBiome(blockposition);
diff --git a/src/main/java/net/minecraft/world/level/block/CauldronBlock.java b/src/main/java/net/minecraft/world/level/block/CauldronBlock.java
index 64de3d52a..86eb427d6 100644
--- a/src/main/java/net/minecraft/world/level/block/CauldronBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/CauldronBlock.java
@@ -1,2 +1,69 @@
-package net.minecraft.world.level.block;public class CauldronBlock {
+package net.minecraft.world.level.block;
+
+import net.minecraft.core.BlockPos;
+import net.minecraft.core.cauldron.CauldronInteraction;
+import net.minecraft.world.entity.Entity;
+import net.minecraft.world.level.Level;
+import net.minecraft.world.level.biome.Biome.Precipitation;
+import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.block.state.BlockBehaviour.Properties;
+import net.minecraft.world.level.gameevent.GameEvent;
+import net.minecraft.world.level.material.Fluid;
+import net.minecraft.world.level.material.Fluids;
+
+public class CauldronBlock extends AbstractCauldronBlock {
+    private static final float RAIN_FILL_CHANCE = 0.05F;
+    private static final float POWDER_SNOW_FILL_CHANCE = 0.1F;
+
+    public CauldronBlock(Properties settings) {
+        super(settings, CauldronInteraction.EMPTY);
+    }
+
+    @Override
+    public boolean isFull(BlockState state) {
+        return false;
+    }
+
+    protected static boolean shouldHandlePrecipitation(Level world, Precipitation precipitation) {
+        if (precipitation == Precipitation.RAIN) {
+            return world.getRandom().nextFloat() < 0.05F;
+        } else if (precipitation == Precipitation.SNOW) {
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+    @Override
+    public void handlePrecipitation(BlockState state, Level world, BlockPos pos, Precipitation precipitation) {
+        if (shouldHandlePrecipitation(world, precipitation)) {
+            if (precipitation == Precipitation.RAIN) {
+                world.setBlockAndUpdate(pos, Blocks.WATER_CAULDRON.defaultBlockState());
+                world.gameEvent((Entity)null, GameEvent.FLUID_PLACE, pos);
+            } else if (precipitation == Precipitation.SNOW) {
+                world.setBlockAndUpdate(pos, Blocks.POWDER_SNOW_CAULDRON.defaultBlockState());
+                world.gameEvent((Entity)null, GameEvent.FLUID_PLACE, pos);
+            }
+
+        }
+    }
+
+    @Override
+    protected boolean canReceiveStalactiteDrip(Fluid fluid) {
+        return true;
+    }
+
+    @Override
+    protected void receiveStalactiteDrip(BlockState state, Level world, BlockPos pos, Fluid fluid) {
+        if (fluid == Fluids.WATER) {
+            world.setBlockAndUpdate(pos, Blocks.WATER_CAULDRON.defaultBlockState());
+            world.levelEvent(1047, pos, 0);
+            world.gameEvent((Entity)null, GameEvent.FLUID_PLACE, pos);
+        } else if (fluid == Fluids.LAVA) {
+            world.setBlockAndUpdate(pos, Blocks.LAVA_CAULDRON.defaultBlockState());
+            world.levelEvent(1046, pos, 0);
+            world.gameEvent((Entity)null, GameEvent.FLUID_PLACE, pos);
+        }
+
+    }
 }
